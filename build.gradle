import org.jetbrains.changelog.Changelog

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.16.0'
    id 'org.jetbrains.changelog' version '2.1.2'
    id "org.jetbrains.grammarkit" version "2022.3"
}

Properties versionProps = new Properties()
try (final InputStream stream = new FileInputStream(file('version.properties'))) {
    versionProps.load(stream);
}

group = pluginGroup
version = versionProps['pluginVersion']
sourceCompatibility = pluginJavaVersion
targetCompatibility = pluginJavaVersion

// Configure project's dependencies
repositories {
    mavenCentral()
}

apply plugin: 'idea'
idea {
    module {
        generatedSourceDirs += file('src/main/gen')
    }
}

// Configure gradle-intellij-plugin plugin.
// Read more: https://github.com/JetBrains/gradle-intellij-plugin
apply plugin: 'org.jetbrains.intellij'
intellij {
    pluginName = pluginId

    type = platformType
    version = platformVersion
    downloadSources = platformDownloadSources.toBoolean()
    updateSinceUntilBuild = true

    // Plugin Dependencies. Uses `platformPlugins` property from the gradle.properties file.
    plugins = platformPlugins.split(',').collect { it.trim() as String }
}

apply plugin: 'org.jetbrains.changelog'

apply plugin: 'org.jetbrains.grammarkit'
generateLexer {
    source = "src/main/resources/org/kdb/inside/brains/q.flex"
    targetDir = "src/main/gen/org/kdb/inside/brains"
    targetClass = "QLexer"
    purgeOldFiles = true
}

generateParser {
    source = "src/main/resources/org/kdb/inside/brains/q.bnf"
    targetRoot = 'src/main/gen'
    pathToParser = 'org/kdb/inside/brains/parser/QParser.java'
    pathToPsiRoot = 'org/kdb/inside/brains/psi'
    purgeOldFiles = true
}

dependencies {
    implementation 'org.jfree:jfreechart:1.5.4'
    implementation 'org.jfree:org.jfree.svg:5.0.5'

    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'
}

sourceSets {
    main {
        java.srcDirs 'src/main/gen', 'src/main/java'
    }
}

test {
    useJUnitPlatform()
}

task generateCode() {
    dependsOn generateLexer
    dependsOn generateParser
}

compileJava {
    dependsOn generateCode
    options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
}

patchPluginXml {
    sinceBuild = pluginSinceBuild
    untilBuild = pluginUntilBuild
    changeNotes = provider {
        changelog.renderItem(changelog.get(project.version).withHeader(false).withEmptySections(false), Changelog.OutputType.HTML)
    }
}

runPluginVerifier {
    ideVersions = pluginVerifierVersions.split(',').collect { it.trim() as String }
}

publishPlugin {
    token = System.getenv("KDBINSIDEBRAINS_RELEASE_PLUGIN_TOKEN")
}